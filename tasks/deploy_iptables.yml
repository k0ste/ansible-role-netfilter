---
- name: "netfilter | Deploy iptables rules"
  ansible.builtin.template:
    src: "iptables.j2"
    dest: "{{ hostvars[inventory_hostname]['netfilter_iptables_dest'] + '/' +
      hostvars[inventory_hostname]['netfilter_iptables_conf'] }}"
    group: "root"
    owner: "root"
    mode: "0644"
    validate: "iptables-restore --test %s"
  when:
    - "hostvars[inventory_hostname]['netfilter'] is defined"
    - "hostvars[inventory_hostname]['netfilter'] != ''"
    - "hostvars[inventory_hostname]['netfilter'] |
       community.general.json_query(vars['netfilter_iptables_mgmt']) is defined"
    - "hostvars[inventory_hostname]['netfilter'] |
       community.general.json_query(vars['netfilter_iptables_mgmt']) == 'true'"
  vars:
    netfilter_iptables_mgmt: "[] | map(&iptables_mgmt || 'false', @) | [0]"
  notify:
    - "Restart iptables"
- name: "netfilter | Enable iptables"
  ansible.builtin.systemd:
    name: "{{ hostvars[inventory_hostname]['netfilter_iptables_service'] }}"
    enabled: "yes"
  when:
    - "hostvars[inventory_hostname]['netfilter'] is defined"
    - "hostvars[inventory_hostname]['netfilter'] != ''"
    - "hostvars[inventory_hostname]['netfilter'] |
       community.general.json_query(vars['netfilter_iptables_enable']) is
       defined"
    - "hostvars[inventory_hostname]['netfilter'] |
       community.general.json_query(vars['netfilter_iptables_enable']) ==
       'true'"
  vars:
    netfilter_iptables_enable: "[] | map(&iptables_enable || 'false', @) | [0]"
- name: "netfilter | Flush handlers [iptables]"
  ansible.builtin.meta: "flush_handlers"
